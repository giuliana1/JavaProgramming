Java Day44
Topics: Abstraction Continue
				Interface

Package name: day44_Abstraction

Warmup task:
	Animal Task:
		Create an abstract class named Animal:
			Variables:
				name, breed(final), gender(final),  age, size, color(final)

			Encapsulate all the fields

			Add a cosntructor that can set all the fields

			Methods:
				eat(); ==> different animals eat different foods
				drink() ==> all the animals drink water
				toString() ==> to display the full info of the animal

		Create the following subclasses of Animal:
				Dog
					eat(): eats Pizza

				Cat
					eat(): eats Biryani

				Tiger
					eat(): eats deer

				Parrot
					eat(): eats chocolate

				Eagle
					eat(): eats snake


OOP Abstraction: concentrating on essentials (what it is), not worrying about the details/implementation (how it's done)

		Abstract method: A method without the implementation/body

							meant to be overridden

				area();
				perimeter();
				...
				eat();
				..

		2 ways to achieve the abstraction:
				1. Abstract class
				2. Interface



		Abstract class: meant to be super class (parent)
						can not be final
						Not concrete ( can not create object)

						can have all the methods, variables, and blocks of non-abstract class + abstract methods
